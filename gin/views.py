from rest_framework import viewsets
from .models import Formation, Service
from .serializer import FormationSerializer, ServiceSerializer
from drf_spectacular.utils import extend_schema, extend_schema_view,OpenApiExample

"""
ON UTILISE LES VIEWSETS CAR C‚ÄôEST PLUS RAPIDE ET SIMPLE,
ET √áA PERMET DE FAIRE TOUTES LES OP√âRATIONS CRUD DANS UNE CLASSE EN SUIVANT LA LOGIQUE REST.
"""

@extend_schema_view(
    list=extend_schema(
        summary="Lister toutes les formations",
        description="Retourne la liste de toutes les formations enregistr√©es dans le syst√®me."
    ),
    retrieve=extend_schema(
        summary="D√©tail d'une formation",
        description="Retourne les informations d√©taill√©es d'une formation en fonction de son ID."
    ),
     create=extend_schema(
        summary="Cr√©er une formation",
        description="Cr√©e une nouvelle formation avec les informations fournies.",
        examples=[
            OpenApiExample(
                name="Exemple de cr√©ation de formation",
                value={
                    "titre": "D√©veloppement Web",
                    "description": "Formation compl√®te sur HTML, CSS, JavaScript, Django et React.",
                    "date_debut": "2025-05-10",
                    "date_fin": "2025-08-10"
                },
                request_only=True,
                response_only=False
            )
        ]
    ),
    update=extend_schema(
        summary="Mettre √† jour une formation",
        description="Met √† jour les informations d'une formation existante."
    ),
    partial_update=extend_schema(
        summary="Mettre √† jour partiellement une formation",
        description="Modifie partiellement les champs d'une formation."
    ),
    destroy=extend_schema(
        summary="Supprimer une formation",
        description="Supprime une formation en fonction de son ID."
    ),
)
class FormationViewSet(viewsets.ModelViewSet):
    queryset = Formation.objects.all()
    serializer_class = FormationSerializer


@extend_schema_view(
    list=extend_schema(
        summary="Lister tous les services",  # üõ†Ô∏è corriger 'summarry' ‚Üí 'summary'
        description="Retourne la liste de tous les services enregistr√©s dans le syst√®me."
    ),
    retrieve=extend_schema(
        summary="D√©tail d'un service",
        description="Retourne les informations d√©taill√©es d'un service en fonction de son ID."
    ),
    create=extend_schema(
        summary="Cr√©er un service",
        description="Cr√©e un nouveau service avec les informations fournies.",
        examples=[
            OpenApiExample(
                name="Exemple de cr√©ation de service",
                value={
                    "nom": "Support technique",
                    "description": "Assistance aux utilisateurs pour r√©soudre leurs probl√®mes techniques."
                },
                request_only=True,
                response_only=False
            )
        ]
    ),
    update=extend_schema(
        summary="Mettre √† jour un service",
        description="Met √† jour les informations d'un service existant."
    ),
    partial_update=extend_schema(
        summary="Mettre √† jour partiellement un service",
        description="Modifie partiellement les champs d'un service."
    ),
    destroy=extend_schema(
        summary="Supprimer un service",
        description="Supprime un service en fonction de son ID."
    ),
)
class ServiceViewSet(viewsets.ModelViewSet):
    queryset = Service.objects.all()
    serializer_class = ServiceSerializer
